From e802b384f2acb7372d90dc0eca3c3adac7b94b04 Mon Sep 17 00:00:00 2001
From: Victor Liu <zheng.liu@thales-cetca.com>
Date: Sat, 23 Dec 2017 01:41:29 +0800
Subject: [PATCH 2/2] Toshiba tc358870xbg mode setting support

---
 drivers/media/i2c/tc358870.c | 198 ++++++++++++++++---------------------------
 include/media/i2c/tc358870.h |   4 +
 2 files changed, 76 insertions(+), 126 deletions(-)
 create mode 100644 include/media/i2c/tc358870.h

diff --git a/drivers/media/i2c/tc358870.c b/drivers/media/i2c/tc358870.c
index a58755065402..2b1c45ca0508 100644
--- a/drivers/media/i2c/tc358870.c
+++ b/drivers/media/i2c/tc358870.c
@@ -13,8 +13,9 @@
 #include <linux/videodev2.h>
 #include <linux/workqueue.h>
 #include <linux/hdmi.h>
+#include <linux/export.h>
 
-static int debug = 3;
+static int debug = 0;
 //module_param(debug, int, 0644);
 //MODULE_PARM_DESC(debug, "debug level (0-3)");
 
@@ -33,6 +34,7 @@ struct tc358870_state {
 	struct clk 		*refclk;
 };
 
+static struct tc358870_state * g_tc_state = NULL;
 
 static void i2c_rd(struct i2c_client *client, u16 reg, u8 *values, u32 n)
 {
@@ -162,7 +164,7 @@ static void i2c_wr32(struct i2c_client *client, u16 reg, u32 val)
 static void tc358870_initial_setup(struct tc358870_state *state)
 {
 	struct i2c_client *client = state->i2c_client;
-	int sys_freq;
+	int sys_freq, i;
 	static u8 edid_data[256] = {
 		0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
 		0x52, 0x62, 0x88, 0x88, 0x00, 0x88, 0x88, 0x88,
@@ -280,103 +282,20 @@ i2c_wr32(client,0x0278,0x00060007); // BTA_COUNT
 i2c_wr32(client,0x027C,0x00000002); // DPHY_TX ADJUST
 i2c_wr32(client,0x011C,0x00000001); // DSITX_START
 
+// Interrupt Control (TOP level)
+i2c_wr16(client,0x0014,0x0f3f);   // IntStatus
+for(i = 0x8502; i <= 0x850b; i++) {
+    if (i != 0x850a){
+        i2c_wr8(client, i + 0x10, 0xff);
+        i2c_wr8(client, i, 0xff);
+    }
+}
+i2c_wr16(client,0x0016,0x0f3f);   // IntMask
+
 // Command Transmission Before Video Start
 i2c_wr16(client,0x0500,0x0000); // CMD_SEL
 i2c_wr32(client,0x0110,0x00000006); // MODE_CONFIG
-//i2c_wr32(client,0x0310,0x00000016); // MODE_CONFIG
-// LCD Initialization
-//LCD_INIT();
-//// Soft Reset
-//i2c_wr16(client,0x0504,0x0005); // DCSCMD_Q
-//i2c_wr16(client,0x0504,0x0001); // DCSCMD_Q
 mdelay(5);
-//// Set Pixel Format
-//i2c_wr16(client,0x0504,0x0015); // DCSCMD_Q
-//i2c_wr16(client,0x0504,0x773A); // DCSCMD_Q
-//delay_us(200);
-////// Set Column Address
-////i2c_wr16(client,0x0504,0x8039); // DCSCMD_Q
-////i2c_wr16(client,0x0504,0x0005); // DCSCMD_Q
-////i2c_wr16(client,0x0504,0x002A); // DCSCMD_Q
-////i2c_wr16(client,0x0504,0x0700); // DCSCMD_Q
-////i2c_wr16(client,0x0504,0x0080); // DCSCMD_Q
-////delay_us(200);
-////// Set Page Address
-////i2c_wr16(client,0x0504,0x8039); // DCSCMD_Q
-////i2c_wr16(client,0x0504,0x0005); // DCSCMD_Q
-////i2c_wr16(client,0x0504,0x002B); // DCSCMD_Q
-////i2c_wr16(client,0x0504,0x0400); // DCSCMD_Q
-////i2c_wr16(client,0x0504,0x0038); // DCSCMD_Q
-//delay_us(200);
-//// Set Tear On
-//i2c_wr16(client,0x0504,0x0015); // DCSCMD_Q
-//i2c_wr16(client,0x0504,0x0035); // DCSCMD_Q
-//delay_us(200);
-//// Set Tear Scanline
-//i2c_wr16(client,0x0504,0x8039); // DCSCMD_Q
-//i2c_wr16(client,0x0504,0x0003); // DCSCMD_Q
-//i2c_wr16(client,0x0504,0x0044); // DCSCMD_Q
-//i2c_wr16(client,0x0504,0x0000); // DCSCMD_Q
-//delay_us(200);
-//// Write Display Brightness
-//i2c_wr16(client,0x0504,0x0015); // DCSCMD_Q
-//i2c_wr16(client,0x0504,0xFF51); // DCSCMD_Q
-//delay_us(200);
-//// Write Control Display
-//i2c_wr16(client,0x0504,0x0015); // DCSCMD_Q
-//i2c_wr16(client,0x0504,0x2453); // DCSCMD_Q
-//delay_us(200);
-//// Adaptive Brightness Control
-//i2c_wr16(client,0x0504,0x0015); // DCSCMD_Q
-//i2c_wr16(client,0x0504,0x0155); // DCSCMD_Q
-//delay_us(200);
-//// Exit Sleep
-//i2c_wr16(client,0x0504,0x0005); // DCSCMD_Q
-//i2c_wr16(client,0x0504,0x0011); // DCSCMD_Q
-//mdelay(120);
-//// MCAP
-//i2c_wr16(client,0x0504,0x0023); // DCSCMD_Q
-//i2c_wr16(client,0x0504,0x00B0); // DCSCMD_Q
-//delay_us(200);
-//// Backlight Control 4
-//i2c_wr16(client,0x0504,0x8029); // DCSCMD_Q
-//i2c_wr16(client,0x0504,0x0014); // DCSCMD_Q
-//i2c_wr16(client,0x0504,0x7DCE); // DCSCMD_Q
-//i2c_wr16(client,0x0504,0x4840); // DCSCMD_Q
-//i2c_wr16(client,0x0504,0x6756); // DCSCMD_Q
-//i2c_wr16(client,0x0504,0x8878); // DCSCMD_Q
-//i2c_wr16(client,0x0504,0xA798); // DCSCMD_Q
-//i2c_wr16(client,0x0504,0xC3B5); // DCSCMD_Q
-//i2c_wr16(client,0x0504,0xDED1); // DCSCMD_Q
-//i2c_wr16(client,0x0504,0xF2E9); // DCSCMD_Q
-//i2c_wr16(client,0x0504,0xFFFA); // DCSCMD_Q
-//i2c_wr16(client,0x0504,0x0004); // DCSCMD_Q
-
-// HDMI Interrupt Mask, Clear
-//i2c_wr8(client,0x850B,0xFF); // MISC_INT
-//i2c_wr8(client,0x851B,0xFD); // MISC_INTM
-i2c_wr8(client,0x8512,0xff);
-i2c_wr8(client,0x8513,0xff);
-i2c_wr8(client,0x8514,0xff);
-i2c_wr8(client,0x8515,0xff);
-i2c_wr8(client,0x8516,0xff);
-i2c_wr8(client,0x8517,0xff);
-i2c_wr8(client,0x8518,0xff);
-i2c_wr8(client,0x8519,0xff);
-i2c_wr8(client,0x851b,0xff);
-i2c_wr8(client,0x851f,0xff);
-//i2c_wr8(client,0x8502,0xff);
-//i2c_wr8(client,0x8512,0xfe);
-i2c_wr8(client,0x850b,0x00);
-i2c_wr8(client,0x851b,0xff);
-//i2c_wr8(client,0x8514,0x00);
-//i2c_wr8(client,0x8515,0x00);
-//i2c_wr8(client,0x8516,0x00);
-// Interrupt Control (TOP level)
-i2c_wr16(client,0x0014,0x05ff);
-i2c_wr16(client,0x0016,0x05ff);
-//i2c_wr16(client,0x0014,0x0FBF); // IntStatus
-//i2c_wr16(client,0x0016,0x0DBF); // IntMask
 
 // Start Video TX
 i2c_wr16(client,0x0004,0x0C15); // ConfCtl0
@@ -410,29 +329,73 @@ i2c_wr16(client,0x0504,0x0000);
 //i2c_wr16(client,0x0504,0x0005); // DCSCMD_Q
 //i2c_wr16(client,0x0504,0x0029); // DCSCMD_Q
 //mdelay(20);
-
 }
 
-static void tc358870_hdmi_setup(struct tc358870_state *state)
+static void tc358870_gpio_reset(struct tc358870_state *state)
 {
-
+	gpiod_set_value(state->reset_gpio, 1);
+	usleep_range(1000, 2000);
+	gpiod_set_value(state->reset_gpio, 0);
+	msleep(5);
 }
 
-static void tc358870_mipi_dsi_setup(struct tc358870_state *state)
+static ssize_t
+smiapp_sysfs_status_read(struct device *dev, struct device_attribute *attr,
+                        char *buf)
 {
+        struct i2c_client *client = to_i2c_client(dev);
+	u8 val;
+	
+	val = i2c_rd8(client, 0x8520);
 
+        return snprintf(buf, 8, "%02x\n", val) + 1;
 }
 
+static DEVICE_ATTR(sys_status, S_IRUGO, smiapp_sysfs_status_read, NULL);
 
-
-static void tc358870_gpio_reset(struct tc358870_state *state)
+void tc358870_hdmi_setup(void)
 {
-	usleep_range(5000, 10000);
-	gpiod_set_value(state->reset_gpio, 1);
-	usleep_range(1000, 2000);
-	gpiod_set_value(state->reset_gpio, 0);
-	msleep(20);
+	struct tc358870_state *state = g_tc_state;
+	struct i2c_client *client = state->i2c_client;
+
+#if 1
+	if (state->reset_gpio){
+		tc358870_gpio_reset(state);
+	}
+
+	tc358870_initial_setup(state);
+#else
+	// Before Video TX
+	i2c_wr16(client,0x0500,0x0004); // CMD_SEL
+	i2c_wr32(client,0x0110,0x00000016); // MODE_CONFIG
+	i2c_wr16(client,0x0504,0x0005);	// Soft Reset
+	i2c_wr16(client,0x0504,0x0001);
+	mdelay(5);
+	i2c_wr16(client,0x0504,0x0005);	// Set Pixel Format
+	i2c_wr16(client,0x0504,0x0001);
+	udelay(200);
+	
+	// Start Video TX
+	i2c_wr16(client,0x0004,0x0C15); // ConfCtl0
+	i2c_wr16(client,0x0006,0x0000); // ConfCtl1
+	
+	// After Video TX
+	i2c_wr32(client,0x0110,0x00000006); // MODE_CONFIG
+	mdelay(32);
+	i2c_wr16(client,0x0504,0x0005);	// MCAP
+	i2c_wr16(client,0x0504,0x0001);
+	mdelay(32);
+	i2c_wr16(client,0x0504,0x0005);	// Interface Setting
+	i2c_wr16(client,0x0504,0x0001);
+	mdelay(32);
+	i2c_wr16(client,0x0504,0x0005);	// MCAP
+	i2c_wr16(client,0x0504,0x0001);
+	mdelay(32);
+	i2c_wr16(client,0x0504,0x0005);	// Display On
+	i2c_wr16(client,0x0504,0x0001);
+#endif
 }
+EXPORT_SYMBOL_GPL(tc358870_hdmi_setup);
 
 static int tc358870_probe_of(struct tc358870_state *state)
 {	
@@ -490,16 +453,11 @@ static int tc358870_probe(struct i2c_client *client,
 	if (err) 
 		return err;
 
-#if 0	
-	err = devm_request_threaded_irq(&client->dev, client->irq, NULL, 
-			tc358870_irq_handler,
-			IRQF_ONESHOT,
-			client->name, data);
-	if (err)
-		return err;
-#endif
 
 	tc358870_initial_setup(state);
+	g_tc_state = state;
+	
+	device_create_file(&client->dev, &dev_attr_sys_status);
 
 	dev_info(&client->dev, "%s found @ 0x%x (%s)\n", client->name,
 		  client->addr << 1, client->adapter->name);
@@ -510,18 +468,6 @@ static int tc358870_probe(struct i2c_client *client,
 
 static int tc358870_remove(struct i2c_client *client)
 {
-#if 0
-	struct v4l2_subdev *sd = i2c_get_clientdata(client);
-	struct tc358870_state *state = to_state(sd);
-
-	cancel_delayed_work(&state->delayed_work_enable_hotplug);
-	v4l2_async_unregister_subdev(sd);
-	v4l2_device_unregister_subdev(sd);
-	mutex_destroy(&state->confctl_mutex);
-	media_entity_cleanup(&sd->entity);
-	v4l2_ctrl_handler_free(&state->hdl);
-#endif
-
 	return 0;
 }
 
diff --git a/include/media/i2c/tc358870.h b/include/media/i2c/tc358870.h
new file mode 100644
index 000000000000..8cab385382a4
--- /dev/null
+++ b/include/media/i2c/tc358870.h
@@ -0,0 +1,4 @@
+#ifndef __TC358870_H__
+#define __TC358870_H__
+void tc358870_hdmi_setup(void);
+#endif
-- 
2.14.1

